name: ci

on:
  workflow_dispatch:

jobs:
  container-test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file_type: [ 'duckdb' ]
        # file_type: [ 'csv', 'json', 'parquet', 'duckdb', 'wal' ]
    steps:
      - name: Checkout Duckdb AFL++
        uses: actions/checkout@v4
        with:
          repository: duckdblabs/duckdb_aflplusplus
          ref: 'main'
          token: ${{ secrets.AFL }}
          
      # - run: sed -i 's/3600/6000/g' Makefile
      
      # - name: Verify directory structure
      #   run: |
      #     ls -la
      #     ls -la src
      #     ls -la scripts
      
      - name: Set up Docker environment
        run: |
          docker --version
          docker pull aflplusplus/aflplusplus

      - name: Start AFL++ container
        run: |
          # Run the container in detached mode, naming it 'afl-container'
          docker run --name afl-container -d aflplusplus/aflplusplus sleep infinity

      - name: Copy directories into container
        run: |
          # Create necessary directories in the container and copy files
          docker exec -w / afl-container mkdir -p duckdb_aflplusplus
          docker cp src afl-container:/duckdb_aflplusplus/src
          docker cp scripts afl-container:/duckdb_aflplusplus/scripts
          docker exec afl-container mkdir -p /duckdb_aflplusplus/build
          docker exec afl-container mkdir -p /duckdb_aflplusplus/corpus
          docker exec afl-container mkdir -p /duckdb_aflplusplus/results
      - name: compile
        continue-on-error: true
        run: |
          make compile-fuzzers-CI
          # for file_type in [ 'csv', 'json', 'parquet', 'duckdb', 'wal' ]
          # do 
          make fuzz-${{ matrix.file_type }}-file
          done
          # make afl-down
      - name: check
        run: |
          # for file_type in [ 'csv', 'json', 'parquet', 'duckdb', 'wal' ]
          # do 
            count=$(ls fuzz_results/${{ matrix.file_type }}_file_fuzzer/default/crashes | wc -l)
            if [ $count -eq 0 ]; then
              echo EMPTY
            else
              echo CRASHES ðŸ“ŒðŸ“ŒðŸ“Œ
              ls fuzz_results/${{ matrix.file_type }}_file_fuzzer/default/crashes > ${{ matrix.file_type }}_crashes.txt
            fi
          # done
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.file_type }}_crashes.txt
          path: ${{ matrix.file_type }}_crashes.txt
      - name: double check
        run: |
          docker cp fuzz_results/${{ matrix.file_type }}_file_fuzzer/default/crashes afl-container:../duckdb/
          docker exec -it afl-container /bin/bash
          cd ../duckdb
          files=$(ls crashes)
          for file in $files
          do
            ./build/release/duckdb -c "ATTACH $file;"
          done
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
