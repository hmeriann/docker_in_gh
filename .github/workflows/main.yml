name: ci

on:
  workflow_dispatch:

jobs:
  container-test-job:
    runs-on: ubuntu-latest

    # container:
    #   image: aflplusplus/aflplusplus
    #   options: --cpus 1

    steps:
      # - name: Checkout Duckdb AFL++
      #   uses: actions/checkout@v4
      #   with:
      #     repository: duckdblabs/duckdb_aflplusplus
      #     ref: 'main'
      #     token: ${{ secrets.AFL }}
      #     path: duckdb_aflplusplus

      # - name: Install Dependencies
      #   run: |
      #     apt-get update -y -qq
      #     apt-get install -y -qq g++ cmake make ninja-build libssl-dev

      # - name: Run AFL++ Setup
      #   run: |
      #     cd duckdb_aflplusplus
      - name: Checkout Duckdb AFL++
        uses: actions/checkout@v4
        with:
          repository: duckdblabs/duckdb_aflplusplus
          ref: 'main'
          token: ${{ secrets.AFL }}

      - name: Verify directory structure
        run: |
          ls -la
          ls -la src
          ls -la scripts
      - name: Set up Docker environment
        run: |
          docker --version
          docker pull aflplusplus/aflplusplus

      - name: Start AFL++ container
        run: |
          # Run the container in detached mode, naming it 'afl-container'
          docker run --name afl-container -d aflplusplus/aflplusplus sleep infinity

      - name: Copy directories into container
        run: |
          # Create necessary directories in the container and copy files
          docker exec -w / afl-container mkdir -p duckdb_aflplusplus
          docker cp src afl-container:/duckdb_aflplusplus/src
          docker cp scripts afl-container:/duckdb_aflplusplus/scripts
          docker exec afl-container mkdir -p /duckdb_aflplusplus/build
          docker exec afl-container mkdir -p /duckdb_aflplusplus/corpus
          docker exec afl-container mkdir -p /duckdb_aflplusplus/results
      # - name: Install Jemalloc
      #   run: |
      #     apt-get update -y && apt-get install -y libjemalloc-dev

      # - name: Configure and Build DuckDB
      #   run: |
      #     cmake -DJEMALLOC=1 ..
      #     # make -j4
      - name: compile
        continue-on-error: true
        run: |
          # docker exec afl-container sed -i '' 's|cd \$(DUCKDB_DIR) \&\& CC=\$(CC) CXX=\$(CXX) GEN=ninja BUILD_JSON=1 CRASH_ON_ASSERT=1 make|cd \$(DUCKDB_DIR) \&\& CC=\$(CC) CXX=\$(CXX) GEN=ninja BUILD_JSON=1 BUILD_JEMALLOC=1 CRASH_ON_ASSERT=1 make|' src/Makefile
          # docker exec afl-container cat src/Makefile
          sed -i '' 's|cd \$(DUCKDB_DIR) \&\& CC=\$(CC) CXX=\$(CXX) GEN=ninja BUILD_JSON=1 CRASH_ON_ASSERT=1 make|cd \$(DUCKDB_DIR) \&\& CC=\$(CC) CXX=\$(CXX) GEN=ninja BUILD_JSON=1 BUILD_JEMALLOC=1 CRASH_ON_ASSERT=1 make|' src/Makefile
          make compile-fuzzers
          make fuzz-csv-file
          
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: hmeriann
